# Very basic testing setup.
#
# For most of the code examples, we don't have unit tests.
# Thats why we are testing classical "Can we install it",
# go vet, staticcheck, go fmt.
#
# It is not covering everything, but basic things like
# version conflicts, typos, etc.
name: Go Testing

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "5 1 * * *"

jobs:
  mongodb:
    name: MongoDB
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: mongodb/go

    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-go@v3.3.1
        with:
          go-version:  '1.19'

      - name: Run go build .
        run: go build

      - name: Run go fmt
        if: runner.os != 'Windows'
        run: diff -u <(echo -n) <(gofmt -d -s .)

      - name: Run go vet
        run: go vet ./...

      - name: Run staticcheck
        uses: dominikh/staticcheck-action@v1.2.0
        with:
          version: "2022.1.3"
          install-go: false
          cache-key: staticcheck
          working-directory: mongodb/go

  mssql:
    name: MSSQL
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: mssql/go

    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-go@v3.3.1
        with:
          go-version:  '1.19'

      - name: Run go build .
        run: go build

      - name: Run go fmt
        if: runner.os != 'Windows'
        run: diff -u <(echo -n) <(gofmt -d -s .)

      - name: Run go vet
        run: go vet ./...

      - name: Run staticcheck
        uses: dominikh/staticcheck-action@v1.2.0
        with:
          version: "2022.1.3"
          install-go: false
          cache-key: staticcheck
          working-directory: mssql/go

  nats:
    name: NATS
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: nats/go

    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-go@v3.3.1
        with:
          go-version:  '1.19'

      - name: Run go build .
        run: go build

      - name: Run go fmt
        if: runner.os != 'Windows'
        run: diff -u <(echo -n) <(gofmt -d -s .)

      - name: Run go vet
        run: go vet ./...

      - name: Run staticcheck
        uses: dominikh/staticcheck-action@v1.2.0
        with:
          version: "2022.1.3"
          install-go: false
          cache-key: staticcheck
          working-directory: nats/go

  oracle:
    name: Oracle
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: oracle/go

    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-go@v3.3.1
        with:
          go-version:  '1.19'

      - name: Run go build .
        run: go build

      - name: Run go fmt
        if: runner.os != 'Windows'
        run: diff -u <(echo -n) <(gofmt -d -s .)

      - name: Run go vet
        run: go vet ./...

      - name: Run staticcheck
        uses: dominikh/staticcheck-action@v1.2.0
        with:
          version: "2022.1.3"
          install-go: false
          cache-key: staticcheck
          working-directory: oracle/go

  postgresql:
    name: PostgreSQL
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: postgresql/go

    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-go@v3.3.1
        with:
          go-version:  '1.19'

      - name: Run go build .
        run: go build

      - name: Run go fmt
        if: runner.os != 'Windows'
        run: diff -u <(echo -n) <(gofmt -d -s .)

      - name: Run go vet
        run: go vet ./...

      - name: Run staticcheck
        uses: dominikh/staticcheck-action@v1.2.0
        with:
          version: "2022.1.3"
          install-go: false
          cache-key: staticcheck
          working-directory: postgresql/go

  rabbitmq:
    name: RabbitMQ
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: rabbitmq/go

    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-go@v3.3.1
        with:
          go-version:  '1.19'

      - name: Run go build .
        run: go build

      - name: Run go fmt
        if: runner.os != 'Windows'
        run: diff -u <(echo -n) <(gofmt -d -s .)

      - name: Run go vet
        run: go vet ./...

      - name: Run staticcheck
        uses: dominikh/staticcheck-action@v1.2.0
        with:
          version: "2022.1.3"
          install-go: false
          cache-key: staticcheck
          working-directory: rabbitmq/go

  redis:
    name: Redis
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: redis/go

    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-go@v3.3.1
        with:
          go-version:  '1.19'

      - name: Run go build .
        run: go build

      - name: Run go fmt
        if: runner.os != 'Windows'
        run: diff -u <(echo -n) <(gofmt -d -s .)

      - name: Run go vet
        run: go vet ./...

      - name: Run staticcheck
        uses: dominikh/staticcheck-action@v1.2.0
        with:
          version: "2022.1.3"
          install-go: false
          cache-key: staticcheck
          working-directory: redis/go
